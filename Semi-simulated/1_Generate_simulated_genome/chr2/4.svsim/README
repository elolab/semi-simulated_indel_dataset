This is modified part of code of svsim (https://github.com/mfranberg/svsim/blob/master/svsim/variation.py)

Parts that need to be changed
# MY CODE!!!!!!!!!!!!!!!!!!!!!!! Get insertion sequences from Venter genome
f = open("Haplotype_2_insertion.txt","r")
f_insertion = f.readlines()
n=-1  # hard to give n=n+1 after "return", so first n in return will be n=0
##
# Represents a insertion of a sequence in the
# genome starting at pos and ending at pos + length, either
# from a another location from_loc or if -1 a random sequence.
#
class Insertion: 
    def __init__(self, pos, length, from_loc):
        self.pos = pos
        self.length = length
        self.from_loc = from_loc

    def get_sequence(self, normal_genome):
        if self.from_loc >= 0:
            return normal_genome[ self.from_loc:(self.from_loc + self.length) ] 
	else:
            #bases = [ 'A','G','C','T' ]
            global n
	    n=n+1
            # return ''.join( random.choice( bases ) for i in range( self.length ) ) # here is what should I modify, instead take some from loc, it should read the insert sequence from "the variants file"
	    return f_insertion[n].split("\t")[2]
